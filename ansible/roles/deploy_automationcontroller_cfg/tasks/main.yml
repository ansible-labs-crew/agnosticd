---

# TODO: Remove, rework after Ansible Automation Platform 2 ships
# ansible 2.10 or higher required,

- name: Remove yum/dnf installed ansible
  dnf:
    name: ansible
    state: absent

- name: Ensure yum/dnf pre-requisites in place
  package:
    name: "{{ deploy_automationcontroller_dnf_packages }}"
    state: present

- name: Install 2.11 or greater installation venv for running automation controller installer
  include_tasks: automationcontroller_installer_venv.yml

- name: Download Ansible controller installer tar.gz
  get_url:
    url: "{{ automationcontroller_installer.url }}"
    dest: /tmp/automationcontroller.tar.gz
    password: "{{ automationcontroller_installer.password }}"
    username: "{{ automationcontroller_installer.username }}"

- name: Create installer directory for Ansible controller
  file:
    path: /tmp/automationcontroller_installer
    state: directory

- name: Extract Ansible controller installer tar.gz
  unarchive:
    src: /tmp/automationcontroller.tar.gz
    dest: /tmp/automationcontroller_installer
    remote_src: true
    extra_opts:
      - '--strip-components=1'
      - '--show-stored-names'

- name: Create template based inventory file for Ansible controller install
  template:
    src: automationcontroller_inventory.j2
    dest: /tmp/automationcontroller_installer/inventory

- name: Run the Automation Controller installer
  shell: "source /opt/venvs/venv_automationcontroller_install/bin/activate; ./setup.sh"
  args:
    chdir: /tmp/automationcontroller_installer
  async: 1400
  poll: 15
  tags:
    - deploy_automationcontroller_installer

- name: Wait for Ansible controller to be up
  uri:
    url: "https://{{groups['automationcontroller'][0] }}/api/v2/ping/"
    method: GET
    user: "{{ deploy_automationcontroller_admin_user }}"
    password: "{{ deploy_automationcontroller_admin_password }}"
    validate_certs: false
  register: r_automationcontroller_ping
  until:
    - r_automationcontroller_ping.json is defined
    - r_automationcontroller_ping.json.instances[0].capacity > 0
    - r_automationcontroller_ping.json.instance_groups[0].capacity > 0
  retries: 60
  delay: 10

- name: Display Ansible controller /api/v2/ping results
  debug:
    msg: '{{ r_automationcontroller_ping.json }}'

- name: remove registry username from inventory file
  lineinfile:
    path: /tmp/automationcontroller_installer/inventory
    regexp: '^registry_username='
    line: 'registry_username=SECRET'

- name: remove registry password from inventory file
  lineinfile:
    path: /tmp/automationcontroller_installer/inventory
    regexp: '^registry_password='
    line: registry_password=SECRET

## Execution environments

- name: install collection containers.podman
  shell: ansible-galaxy collection install containers.podman

- name: Login to redhat registry
  containers.podman.podman_login:
    username: '{{ registry_username }}'
    password: '{{ registry_password }}'
    registry: registry.redhat.io
  become_user: "awx"

- name: Mod containers.conf to utilize max of 10 parallel threads
  become_user: "awx"
  lineinfile:
    path: /var/lib/awx/.config/containers/containers.conf
    line: 'image_parallel_copies=10'
    insertafter: EOF

- name: Pull supported images
  become_user: "awx"
  containers.podman.podman_image:
    name: "{{ item }}"
  loop:
    - "registry.redhat.io/ansible-automation-platform-20-early-access/ee-supported-rhel8:2.0.0"
    - "registry.redhat.io/ansible-automation-platform-20-early-access/ee-29-rhel8:2.0.0"
    - "registry.redhat.io/ansible-automation-platform-20-early-access/ee-minimal-rhel8:2.0.0"
  register: podman_pull_supported
  until: podman_pull_supported is not failed
  retries: 5
  delay: 15
...
