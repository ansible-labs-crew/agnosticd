---
- name: Determine Host
  shell: "oc cluster-info | head -n 1 | sed 's/^.*https...api//' | sed 's/.6443.*$//'"
  register: cluster_response

- name: Extract Cluster
  set_fact:
    cluster_host: "{{ cluster_response.stdout }}"

- name: Run Cert Manager Helm Chart
  with_items: "{{ ocp4_workload_redhat_developer_hub_bootstrap_env }}"
  kubernetes.core.helm:
    state: present
    name: cert-manager
    namespace: "openshift-operators"
    chart_ref: ~/demo-setup/charts/operator
    values_files: ["/home/ec2-user/demo-setup/charts/operator/values-certmanager-operator.yaml"]

- name: Wait for Cert Manager to be Ready
  with_items: "{{ ocp4_workload_redhat_developer_hub_bootstrap_env }}"
  kubernetes.core.k8s_info:
    api_version:  cert-manager.io/v1
    kind: ClusterIssuer
  register: cm_crd
  until: cm_crd.api_found == true
  retries: 40
  delay: 5

- name: Pause until Cert Manager is Ready
  pause:
    seconds: 10

- name: Helm Dependency Update
  shell: "helm dep update"
  args:
    chdir: ~/demo-setup/charts/vault
  register: sso_admin_pwd_rsp

- name: Run Vault Helm Chart
  with_items: "{{ ocp4_workload_redhat_developer_hub_bootstrap_env }}"
  kubernetes.core.helm:
    state: present
    name: vault
    namespace: "{{ item.vaultnamespace }}"
    chart_ref: ~/demo-setup/charts/vault
    values:
      dns:
        zone: "{{ cluster_host[1:] }}"
    create_namespace: true
  register: r_vault
  until: "r_vault is not failed"
  retries: 60
  delay: 10

- name: Create Vault-Config Operator
  with_items: "{{ ocp4_workload_redhat_developer_hub_bootstrap_env }}"
  kubernetes.core.helm:
    state: present
    name: vault-config
    chart_ref: ~/demo-setup/charts/operator
    namespace: "{{ item.vaultconfignamespace }}"
    values_files: ["/home/ec2-user/demo-setup/charts/operator/values-vault-config-operator.yaml"]
    create_namespace: true
  register: r_vault_config
  until: "r_vault_config is not failed"
  retries: 60
  delay: 10