---
- name: Step 00xxxxx software
  hosts: localhost
  gather_facts: False
  become: false
  tasks:
    - debug:
        msg: "Software tasks Started"

- hosts: all
  gather_facts: yes
  tasks:
    - name: Dump all variables
      local_action:
        module: template
        src: dumpall.j2
        dest: /tmp/ansible_dump.all
      run_once: true
      when: dump_vars|default(false)|bool

- name: Install Ansible automation controller
  hosts: bastions[0]
  gather_facts: false
  become: true

  tasks:

    - name: Install code-server (config role)
      include_role:
        name: vscode-server_cfg

    - name: Download Manifest for Controller
      get_url:
        url: "{{ controller_manifest.url }}"
        dest: /tmp
        username: "{{ controller_manifest.username }}"
        password: "{{ controller_manifest.password }}"

    - name: Install Ansible automation controller (config role)
      include_role:
        name: deploy_automationcontroller_cfg

    - name: deploy LE CA Certificate files
      copy:
        src: lets-encrypt-r3.pem
        dest: /etc/pki/ca-trust/source/anchors/
        owner: root
        group: root
        mode: 0644

    - name: update CA trusts
      shell: update-ca-trust

    # note that we remove YUM/RPM installed ansible before installing
    # automationcontroller, now we install it back to avoid needing EPEL
    - name: install ansible on the bastion (avoiding EPEL)
      dnf:
        name: ansible
        state: present
        disablerepo: epel

- name: Install license and LE certs, prefetch EE images on autoctl nodes
  hosts: automationcontroller
  gather_facts: false
  become: true

  tasks:

    - name: License autoctl nodes (config role)
      include_role:
        name: tower-license-injector_cfg
      run_once: true

    - name: call issue_cert role (config role)
      include_role:
        name: automation_controller_issue_cert_cfg

    ## Preload execution environments

    - name: Login to redhat registry
      containers.podman.podman_login:
        username: '{{ registry_username }}'
        password: '{{ registry_password }}'
        registry: registry.redhat.io
      become_user: "awx"

    - name: Mod containers.conf to utilize max of 10 parallel threads
      become_user: "awx"
      lineinfile:
        path: /var/lib/awx/.config/containers/containers.conf
        line: 'image_parallel_copies=10'
        insertafter: EOF

    - name: Pull supported images
      become_user: "awx"
      containers.podman.podman_image:
        name: "{{ item }}"
      loop:
        - "registry.redhat.io/ansible-automation-platform-20-early-access/ee-supported-rhel8:2.0.0"
        - "registry.redhat.io/ansible-automation-platform-20-early-access/ee-29-rhel8:2.0.0"
        - "registry.redhat.io/ansible-automation-platform-20-early-access/ee-minimal-rhel8:2.0.0"
      register: podman_pull_supported
      until: podman_pull_supported is not failed
      retries: 5
      delay: 15

- name: Install Private Automation Hub on dedicated node
  hosts: pah[0]
  gather_facts: false
  become: true

  tasks:
    - name: Install Ansible Private Automation Hub (config role)
      include_role:
        name: deploy_privateautomationhub_cfg
      when: pah_instance_count >= 1

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Software checks completed successfully"
