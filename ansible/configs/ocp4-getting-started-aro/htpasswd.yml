---
- name: Authenticating for k8s module to work in workloads
  hosts: localhost
  gather_facts: false
  run_once: true
  become: false
  environment:
    KUBECONFIG: "{{ output_dir }}/{{ guid }}-kubeconfig"
    PATH: '{{ output_dir }}:/bin:/usr/bin:/usr/local/bin:/usr/sbin'
  tasks:
  - name: Dropping / as the last character in API url
    set_fact:
      az_aro4_public_api_fixed: "{{ az_aro4_public_api.stdout[:-1] }}"
  - name: Logging into ARO 4 with OpenShift CLI (oc)
    shell: >-
      oc login "{{ az_aro4_public_api_fixed }}"
      --username="kubeadmin"
      --password="{{ az_aro4_kubeadmin_password.stdout }}"
    register: az_aro4_auth_results
  - name: Logging into ARO 4 with k8s_auth module
    k8s_auth:
      host: "{{ az_aro4_public_api_fixed }}"
      username: "kubeadmin"
      password: "{{ az_aro4_kubeadmin_password.stdout }}"
    register: az_aro4_auth_results

- name: Adding users with htpasswd
  hosts: localhost
  gather_facts: false
  run_once: true
  become: false
  environment:
    KUBECONFIG: "{{ output_dir }}/{{ guid }}-kubeconfig"
    PATH: '{{ output_dir }}:/bin:/usr/bin:/usr/local/bin:/usr/sbin'
  tasks:
  - name: Setup HTPasswd Authentication
    block:
    - name: Generate cluster admin password
      when: aro_admin_password | default('') | length == 0
      ansible.builtin.set_fact:
        _aro_admin_password: >-
          {{ lookup('password', '/dev/null chars=ascii_letters,digits '
             ~ 'length=' ~ aro_admin_password_length
          ) }}

    - name: Use provided admin password
      when: aro_admin_password | default('') | length > 0
      ansible.builtin.set_fact:
        _aro_admin_password: >-
          {{ aro_admin_password }}


    - name: Create temporary htpasswd file
      ansible.builtin.tempfile:
        state: file
        suffix: htpasswd
      register: r_htpasswd

    - name: Add admin user to htpasswd file
      community.general.htpasswd:
        path: "{{ r_htpasswd.path }}"
        name: "{{ aro_admin_user }}"
        password: "{{ _aro_admin_password }}"

    - name: Read contents of htpasswd file
      ansible.builtin.slurp:
        src: "{{ r_htpasswd.path }}"
      register: r_htpasswd_file

    - name: Remove generated htpasswd file
      ansible.builtin.file:
        path: "{{ r_htpasswd.path }}"
        state: absent

    - name: Ensure htpasswd Secret is absent
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Secret
        name: htpasswd
        namespace: openshift-config
      register: r_htpasswd_secret_absent
      retries: 5
      delay: 10
      until: r_htpasswd_secret_absent is success

    - name: Create htpasswd Secret
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'secret-htpasswd.yaml.j2' ) | from_yaml }}"

    - name: Update OAuth Configuration
      k8s:
        host: "{{ az_aro4_public_api_fixed }}"
        api_key: "{{ az_aro4_auth_results.k8s_auth.api_key }}"
        state: present
        definition: "{{ lookup('file', item ) | from_yaml }}"
      loop:
      - oauth-htpasswd.yaml

    - name: Retrieve API server configuration (for API endpoint)
      k8s_facts:
        host: "{{ az_aro4_public_api_fixed }}"
        api_key: "{{ az_aro4_auth_results.k8s_auth.api_key }}"
        api_version: config.openshift.io/v1
        kind: Infrastructure
        name: cluster
      register: r_cluster

